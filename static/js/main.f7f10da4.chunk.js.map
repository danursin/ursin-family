{"version":3,"sources":["component/PersonNode.tsx","family/index.ts","App.tsx","index.tsx"],"names":["buildName","person","first","middle","last","maiden","PersonNode","props","id","father","mother","children","name","length","map","child","family","require","minLevel","maxLevel","assignLevels","level","undefined","fatherId","find","f","Error","motherId","childrenIds","push","levelOffset","forEach","App","levelZeros","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAOMA,EAAY,SAACC,GAA4B,IACnCC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,OAAQC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAE7B,MADU,UAAMD,EAAN,aAAeF,EAAf,YAAwBC,GAAxB,OAAiCE,EAAM,mBAAYA,GAAW,KA0B7DC,EAtB+B,SAAxCA,EAAyCC,GAA4B,IAC/DN,EAAWM,EAAXN,OACAO,EAAiCP,EAAjCO,GAAIC,EAA6BR,EAA7BQ,OAAQC,EAAqBT,EAArBS,OAAQC,EAAaV,EAAbU,SACtBC,EAAOZ,EAAUC,GACvB,OACI,oCACI,kCAAUW,IACV,wDAA2BA,OACxBH,GAAU,0CAAaT,EAAUS,QACjCC,GAAU,0CAAaV,EAAUU,SAClC,OAACC,QAAD,IAACA,OAAD,EAACA,EAAUE,SACT,qCACI,0CACCF,EAASG,KAAI,SAACC,GAAD,OACV,cAACT,EAAD,CAA2BL,OAAQc,GAAlBA,EAAMP,YATzBA,I,OCfhBQ,EAAmBC,EAAQ,GAE7BC,EAAW,EACXC,EAAW,GACM,SAAfC,EAAgBnB,EAAgBoB,GAClC,QAAqBC,IAAjBrB,EAAOoB,MAAX,CAUA,GAPIA,EAAQH,IACRA,EAAWG,GAEXA,EAAQF,IACRA,EAAWE,GAEfpB,EAAOoB,MAAQA,EACXpB,EAAOsB,SAAU,CACjB,IAAMd,EAASO,EAAOQ,MAAK,SAACC,GAAD,OAAOA,EAAEjB,KAAOP,EAAOsB,YAClD,IAAKd,EACD,MAAM,IAAIiB,MAAJ,yBAA4BzB,EAAOQ,OAAnC,2BAA4DR,EAAOO,KAE7EP,EAAOQ,OAASA,EAChBW,EAAaX,EAAQY,EAAQ,GAGjC,GAAIpB,EAAO0B,SAAU,CACjB,IAAMjB,EAASM,EAAOQ,MAAK,SAACC,GAAD,OAAOA,EAAEjB,KAAOP,EAAO0B,YAClD,IAAKjB,EACD,MAAM,IAAIgB,MAAJ,yBAA4BzB,EAAOS,OAAnC,2BAA4DT,EAAOO,KAE7EP,EAAOS,OAASA,EAChBU,EAAaV,EAAQW,EAAQ,GAIjC,GADApB,EAAOU,SAAW,GACdV,EAAO2B,YAAa,CAAC,IAAD,gBACH3B,EAAO2B,aADJ,yBACTpB,EADS,QAEVO,EAAQC,EAAOQ,MAAK,SAACC,GAAD,OAAOA,EAAEjB,KAAOA,KAC1C,IAAKO,EACD,MAAM,IAAIW,MAAJ,wBAA2BlB,EAA3B,2BAAgDP,EAAOO,KAEjEP,EAAOU,SAASkB,KAAKd,GACrBK,EAAaL,EAAOM,EAAQ,IANhC,2BAAsC,IADlB,iCAY5BD,CAAaJ,EAAO,GAAI,GAExB,IAAMc,EAAcZ,EAAWC,EAC/BH,EAAOe,SAAQ,SAAC9B,GACZ,QAAqBqB,IAAjBrB,EAAOoB,MACP,MAAM,IAAIK,MAAJ,yBAA4BzB,EAAOO,GAAnC,8BAEVP,EAAOoB,OAASS,KAGLd,QC1CAgB,EAXO,WAClB,IAAMC,EAAajB,EAAOkB,QAAO,SAACT,GAAD,OAAmB,IAAZA,EAAEJ,SAC1C,OACI,mCACKY,EAAWnB,KAAI,SAACb,GAAD,OACZ,cAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAOO,U,cCPxC2B,EAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.f7f10da4.chunk.js","sourcesContent":["import { Person } from \"../types\";\r\nimport React from \"react\";\r\n\r\ninterface PersonNodeProps {\r\n    person: Person;\r\n}\r\n\r\nconst buildName = (person: Person): string => {\r\n    const { first, middle, last, maiden } = person;\r\n    const name = `${last}, ${first} ${middle}${maiden ? `, n√©e ${maiden}` : \"\"}`;\r\n    return name;\r\n};\r\n\r\nconst PersonNode: React.FC<PersonNodeProps> = (props: PersonNodeProps) => {\r\n    const { person } = props;\r\n    const { id, father, mother, children } = person;\r\n    const name = buildName(person);\r\n    return (\r\n        <details key={id}>\r\n            <summary>{name}</summary>\r\n            <p>I am some detail about {name}</p>\r\n            {!!father && <h3>Father: {buildName(father)}</h3>}\r\n            {!!mother && <h3>Mother: {buildName(mother)}</h3>}\r\n            {!!children?.length && (\r\n                <>\r\n                    <h3>Children</h3>\r\n                    {children.map((child) => (\r\n                        <PersonNode key={child.id} person={child} />\r\n                    ))}\r\n                </>\r\n            )}\r\n        </details>\r\n    );\r\n};\r\n\r\nexport default PersonNode;\r\n","import { Person } from \"../types\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst family: Person[] = require(\"./family.json\");\r\n\r\nlet minLevel = 0;\r\nlet maxLevel = 0;\r\nconst assignLevels = (person: Person, level: number): void => {\r\n    if (person.level !== undefined) {\r\n        return;\r\n    }\r\n    if (level < minLevel) {\r\n        minLevel = level;\r\n    }\r\n    if (level > maxLevel) {\r\n        maxLevel = level;\r\n    }\r\n    person.level = level;\r\n    if (person.fatherId) {\r\n        const father = family.find((f) => f.id === person.fatherId);\r\n        if (!father) {\r\n            throw new Error(`Father with id ${person.father} not for person ${person.id}`);\r\n        }\r\n        person.father = father;\r\n        assignLevels(father, level - 1);\r\n    }\r\n\r\n    if (person.motherId) {\r\n        const mother = family.find((f) => f.id === person.motherId);\r\n        if (!mother) {\r\n            throw new Error(`Mother with id ${person.mother} not for person ${person.id}`);\r\n        }\r\n        person.mother = mother;\r\n        assignLevels(mother, level - 1);\r\n    }\r\n\r\n    person.children = [];\r\n    if (person.childrenIds) {\r\n        for (const id of person.childrenIds) {\r\n            const child = family.find((f) => f.id === id);\r\n            if (!child) {\r\n                throw new Error(`Child with id ${id} not for person ${person.id}`);\r\n            }\r\n            person.children.push(child);\r\n            assignLevels(child, level + 1);\r\n        }\r\n    }\r\n};\r\n\r\nassignLevels(family[0], 0);\r\n\r\nconst levelOffset = minLevel - maxLevel;\r\nfamily.forEach((person) => {\r\n    if (person.level === undefined) {\r\n        throw new Error(`Person with id ${person.id} was not assigned a level`);\r\n    }\r\n    person.level -= levelOffset;\r\n});\r\n\r\nexport default family;\r\n","import \"./style/site.scss\";\n\nimport PersonNode from \"./component/PersonNode\";\nimport React from \"react\";\nimport family from \"./family\";\n\nconst App: React.FC = () => {\n    const levelZeros = family.filter((f) => f.level === 0);\n    return (\n        <>\n            {levelZeros.map((person) => (\n                <PersonNode key={person.id} person={person} />\n            ))}\n        </>\n    );\n};\n\nexport default App;\n","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}