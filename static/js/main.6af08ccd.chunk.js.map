{"version":3,"sources":["family/index.ts","component/FamilyTree.tsx","App.tsx","index.tsx"],"names":["family","require","minLevel","maxLevel","assignLevels","person","level","undefined","fatherId","father","find","f","id","Error","motherId","mother","children","childrenIds","child","push","levelOffset","forEach","buildName","first","middle","last","maiden","hierarchyHelper","map","name","value","FamilyTree","svgRef","useRef","useEffect","svgNode","current","json","filter","assembleFamilyData","root","d3","size","Math","PI","width","separation","a","b","parent","depth","tree","sort","data","svg","append","attr","selectAll","links","join","angle","d","x","radius","y","descendants","text","clone","lower","_this","node","getBBox","height","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6af08ccd.chunk.js","sourcesContent":["import { Person } from \"../types\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst family: Person[] = require(\"./family.json\");\r\n\r\nlet minLevel = 0;\r\nlet maxLevel = 0;\r\nconst assignLevels = (person: Person, level: number): void => {\r\n    if (person.level !== undefined) {\r\n        return;\r\n    }\r\n    if (level < minLevel) {\r\n        minLevel = level;\r\n    }\r\n    if (level > maxLevel) {\r\n        maxLevel = level;\r\n    }\r\n    person.level = level;\r\n    if (person.fatherId) {\r\n        const father = family.find((f) => f.id === person.fatherId);\r\n        if (!father) {\r\n            throw new Error(`Father with id ${person.father} not for person ${person.id}`);\r\n        }\r\n        person.father = father;\r\n        assignLevels(father, level - 1);\r\n    }\r\n\r\n    if (person.motherId) {\r\n        const mother = family.find((f) => f.id === person.motherId);\r\n        if (!mother) {\r\n            throw new Error(`Mother with id ${person.mother} not for person ${person.id}`);\r\n        }\r\n        person.mother = mother;\r\n        assignLevels(mother, level - 1);\r\n    }\r\n\r\n    person.children = [];\r\n    if (person.childrenIds) {\r\n        for (const id of person.childrenIds) {\r\n            const child = family.find((f) => f.id === id);\r\n            if (!child) {\r\n                throw new Error(`Child with id ${id} not for person ${person.id}`);\r\n            }\r\n            person.children.push(child);\r\n            assignLevels(child, level + 1);\r\n        }\r\n    }\r\n};\r\n\r\nassignLevels(family[0], 0);\r\n\r\nconst levelOffset = minLevel - maxLevel;\r\nfamily.forEach((person) => {\r\n    if (person.level === undefined) {\r\n        throw new Error(`Person with id ${person.id} was not assigned a level`);\r\n    }\r\n    person.level -= levelOffset;\r\n});\r\n\r\nexport default family;\r\n","import * as d3 from \"d3\";\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nimport { Person } from \"../types\";\r\nimport family from \"../family\";\r\n\r\ninterface Datum {\r\n    name: string;\r\n    value?: number;\r\n    children?: Datum[];\r\n}\r\n\r\nconst buildName = (person: Person): string => {\r\n    const { first, middle, last, maiden } = person;\r\n    const name = `${last}, ${first} ${middle}${maiden ? `, nÃ©e ${maiden}` : \"\"}`;\r\n    return name;\r\n};\r\n\r\nconst hierarchyHelper = (person: Person): Datum => {\r\n    const children = person.children?.map(hierarchyHelper);\r\n    const datum: Datum = {\r\n        name: buildName(person),\r\n        value: person.id,\r\n        children\r\n    };\r\n    return datum;\r\n};\r\n\r\nconst assembleFamilyData = (family: Person[]): Datum => {\r\n    const children = family.filter((f) => f.level === 0).map(hierarchyHelper);\r\n    const root: Datum = {\r\n        name: \"Distant Ancestor\",\r\n        children\r\n    };\r\n    return root;\r\n};\r\n\r\nconst FamilyTree: React.FC = () => {\r\n    const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n    useEffect(() => {\r\n        const svgNode = svgRef.current;\r\n        if (!svgNode) {\r\n            throw new Error(\"svg not yet captured\");\r\n        }\r\n\r\n        const json = assembleFamilyData(family);\r\n        const width = 954; //document.body.clientWidth;\r\n        const radius = width / 2;\r\n\r\n        const tree = d3\r\n            .tree<Datum>()\r\n            .size([2 * Math.PI, radius])\r\n            .separation((a, b) => (a.parent === b.parent ? 1 : 2) / a.depth);\r\n\r\n        const data = d3.hierarchy<Datum>(json).sort((a, b) => d3.ascending(a.data.name, b.data.name));\r\n\r\n        const root = tree(data);\r\n\r\n        const svg = d3.select(svgNode);\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"#555\")\r\n            .attr(\"stroke-opacity\", 0.4)\r\n            .attr(\"stroke-width\", 1.5)\r\n            .selectAll(\"path\")\r\n            .data(root.links())\r\n            .join(\"path\")\r\n            .attr(\r\n                \"d\",\r\n                d3\r\n                    .linkRadial<unknown, d3.HierarchyPointNode<Datum>>()\r\n                    .angle((d) => d.x)\r\n                    .radius((d) => d.y)\r\n            );\r\n\r\n        svg.append(\"g\")\r\n            .selectAll(\"circle\")\r\n            .data(root.descendants())\r\n            .join(\"circle\")\r\n            .attr(\r\n                \"transform\",\r\n                (d) => `\r\n                    rotate(${(d.x * 180) / Math.PI - 90})\r\n                    translate(${d.y},0)\r\n                `\r\n            )\r\n            .attr(\"fill\", (d) => (d.children ? \"#555\" : \"#999\"))\r\n            .attr(\"r\", 2.5);\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", 10)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-width\", 3)\r\n            .selectAll(\"text\")\r\n            .data(root.descendants())\r\n            .join(\"text\")\r\n            .attr(\r\n                \"transform\",\r\n                (d) => `\r\n        rotate(${(d.x * 180) / Math.PI - 90}) \r\n        translate(${d.y},0) \r\n        rotate(${d.x >= Math.PI ? 180 : 0})\r\n      `\r\n            )\r\n            .attr(\"dy\", \"0.31em\")\r\n            .attr(\"x\", (d) => (d.x < Math.PI === !d.children ? 6 : -6))\r\n            .attr(\"text-anchor\", (d) => (d.x < Math.PI === !d.children ? \"start\" : \"end\"))\r\n            .text((d) => d.data.name)\r\n            .clone(true)\r\n            .lower()\r\n            .attr(\"stroke\", \"white\");\r\n\r\n        svg.attr(\"viewBox\", () => {\r\n            const _this = svg.node();\r\n            if (!_this) {\r\n                return null;\r\n            }\r\n            const { x, y, width, height } = _this.getBBox();\r\n            return [x, y, width, height].join();\r\n        });\r\n    }, []);\r\n\r\n    return <svg ref={svgRef} />;\r\n};\r\n\r\nexport default FamilyTree;\r\n","import \"./style/site.scss\";\r\n\r\nimport FamilyTree from \"./component/FamilyTree\";\r\nimport React from \"react\";\r\n\r\nconst App: React.FC = () => {\r\n    return <FamilyTree />;\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}